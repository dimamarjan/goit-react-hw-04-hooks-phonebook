{"version":3,"sources":["components/ContactForm/ContactForm.style.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.style.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.style.jsx","components/ContactList/ContactList.jsx","App.js","reportWebVitals.js","index.js"],"names":["FormPhoneBook","styled","form","LabelForm","label","LabelText","span","InputForm","input","SubmitButton","button","ContactForm","onHandleChange","onAddContact","onSubmit","type","name","pattern","title","required","onChange","LabelContacts","LabelContactsText","AccentText","InputContacts","Filter","ContactListSection","ul","ContactListItem","li","ContactItemText","DelContactButton","ContactList","onDelete","filtredDataArr","map","contactItem","number","value","id","onClick","App","key","defaultValue","useState","JSON","parse","window","localStorage","getItem","state","setState","useEffect","setItem","stringify","useLocalStorage","contacts","setСontacts","filteredData","setFilteredData","filter","setFilter","setName","setNumber","handleChange","target","isDatNumber","parseInt","indexOf","event","preventDefault","newId","uuidv4","message","length","forEach","alert","console","log","prevState","tempArrContacts","contactElem","index","splice","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5b0266b7.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\r\n\r\nexport const FormPhoneBook = styled.form`\r\ndisplay: block;\r\nwidth: 320px;\r\nborder: 2px solid black;\r\npadding: 10px;\r\n\r\nmargin-left: 5px;\r\n`;\r\n\r\nexport const LabelForm = styled.label`\r\ndisplay: flex;\r\nflex-direction: column;\r\nfont-size: 20px;\r\n`;\r\n\r\nexport const LabelText = styled.span`\r\nmargin-bottom: 5px;\r\n`;\r\n\r\nexport const InputForm = styled.input`\r\nwidth: 150px;\r\nmargin-bottom: 20px;\r\n`;\r\n\r\nexport const SubmitButton = styled.button``;\r\n\r\n","import {FormPhoneBook, LabelForm, LabelText, InputForm, SubmitButton} from 'components/ContactForm/ContactForm.style'\r\n\r\nexport function ContactForm({onHandleChange, onAddContact}) {\r\n    return (\r\n        <div>\r\n            <FormPhoneBook onSubmit={onAddContact}>\r\n                <LabelForm>\r\n                    <LabelText>Name</LabelText>\r\n                    <InputForm\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                        required\r\n                        onChange={onHandleChange}>\r\n                    </InputForm>\r\n                </LabelForm>\r\n                <LabelForm>\r\n                    <LabelText>Number</LabelText>\r\n                    <InputForm\r\n                        type=\"tel\"\r\n                        name=\"number\"\r\n                        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                        required\r\n                        onChange={onHandleChange}>\r\n                    </InputForm>\r\n                </LabelForm>\r\n                <SubmitButton>Add contact</SubmitButton>\r\n            </FormPhoneBook>\r\n        </div>\r\n    );\r\n}\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const LabelContacts = styled.label`\r\ndisplay: flex;\r\nflex-direction: column;\r\nfont-size: 20px;\r\nmargin-left: 15px;\r\n`;\r\n\r\nexport const LabelContactsText = styled.span`\r\nmargin-bottom: 10px;\r\n`;\r\n\r\nexport const AccentText = styled.span`\r\ntext-decoration: underline;\r\nfont-weight: 600;\r\n`;\r\n\r\nexport const InputContacts = styled.input`\r\nwidth: 150px;\r\n`;","import { LabelContacts, LabelContactsText, InputContacts, AccentText } from \"components/Filter/Filter.style\"\r\n\r\nexport function Filter ({onHandleChange}) {    \r\n    return (\r\n        <div>\r\n            <LabelContacts>\r\n                <LabelContactsText>Find contacts by <AccentText>name</AccentText> or <AccentText>number</AccentText></LabelContactsText>\r\n                <InputContacts\r\n                    name=\"filter\"\r\n                    onChange={onHandleChange} />\r\n            </LabelContacts>\r\n        </div>\r\n    );\r\n}\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const ContactListSection = styled.ul`\r\nmargin-left: 15px;\r\n`;\r\n\r\nexport const ContactListItem = styled.li`\r\ntext-transform: capitalize;\r\n:not(:last-child){\r\n    margin-bottom: 15px;\r\n}\r\n`;\r\n\r\nexport const ContactItemText = styled.span``;\r\n\r\nexport const DelContactButton = styled.button`\r\nmargin-left: 10px;\r\n`;","import { ContactListSection, ContactListItem, ContactItemText, DelContactButton } from 'components/ContactList/ContactList.style'\r\n\r\nexport function ContactList({onDelete,filtredDataArr}) {\r\n    return (\r\n        <div>\r\n            <ContactListSection>\r\n                {filtredDataArr.map((contactItem) => (\r\n                    <ContactListItem key={contactItem.id}>\r\n                        <ContactItemText>{contactItem.name}: {contactItem.number}</ContactItemText>\r\n                        <DelContactButton\r\n                            value={contactItem.id}\r\n                            onClick={onDelete}>\r\n                            Delete</DelContactButton>\r\n                    </ContactListItem>\r\n                ))}\r\n            </ContactListSection>\r\n        </div>\r\n    );\r\n};\r\n\r\n","import { useState, useEffect } from \"react\";\nimport { ContactForm } from \"components/ContactForm/ContactForm\";\nimport { Filter } from \"components/Filter/Filter\";\nimport { ContactList } from \"components/ContactList/ContactList\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nconst useLocalStorage = (key, defaultValue) => {\n  const [state, setState] = useState(() => {\n    return JSON.parse(window.localStorage.getItem(key)) ?? defaultValue;\n  });\n  useEffect(() => {\n    window.localStorage.setItem(key, JSON.stringify(state));\n  }, [key, state]);\n\n  return [state, setState];\n};\n\nfunction App() {\n  const [contacts, setСontacts] = useLocalStorage(\"contacts\", []);\n  const [filteredData, setFilteredData] = useState([]);\n  const [filter, setFilter] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n\n  const handleAdd = (event) => {\n    event.preventDefault();\n    const { target } = event;\n    const newId = uuidv4();\n    let message = \"\";\n    if (contacts.length !== 0) {\n      contacts.forEach((contactItem) => {\n        if (contactItem.name === name) {\n          message = `${name} is already in contacts.`;\n          alert(message);\n        }\n        if (contactItem.number === number) {\n          message = `${number} is already in contacts.`;\n          alert(message);\n        }\n      });\n    }\n    if (message.length === 0) {\n      console.log(contacts.length);\n      setСontacts((prevState) => {\n        if (prevState.length !== 0) {\n          return [...prevState, { id: newId, name: name, number: number }];\n        } else {\n          return [{ id: newId, name: name, number: number }];\n        }\n      });\n      target[0].value = \"\";\n      target[1].value = \"\";\n    } else {\n      target[0].value = \"\";\n      target[1].value = \"\";\n    }\n  };\n\n  const handleChange = ({ target }) => {\n    switch (target.name) {\n      case \"name\":\n        setName(target.value);\n        break;\n      case \"number\":\n        setNumber(target.value);\n        break;\n      case \"filter\":\n        setFilter(target.value);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const handleDelete = ({ target }) => {\n    let tempArrContacts = [...contacts];\n    tempArrContacts.forEach((contactElem, index) => {\n      if (contactElem.id === target.value) {\n        tempArrContacts.splice(index, 1);\n      }\n    });\n    setСontacts(tempArrContacts);\n  };\n\n  useEffect(() => {\n    if (filter) {\n      const isDatNumber = parseInt(filter);\n      if (isDatNumber) {\n        setFilteredData([\n          ...contacts.filter((contactItem) => {\n            return contactItem.number.indexOf(filter) > -1;\n          }),\n        ]);\n      } else {\n        setFilteredData([\n          ...contacts.filter((contactItem) => {\n            return contactItem.name.indexOf(filter) > -1;\n          }),\n        ]);\n      }\n    } else {\n      setFilteredData(contacts);\n    }\n  }, [filter, contacts]);\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <ContactForm onHandleChange={handleChange} onAddContact={handleAdd} />\n      <h2>Contacts</h2>\n      <Filter onHandleChange={handleChange} />\n      <ContactList onDelete={handleDelete} filtredDataArr={filteredData} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}